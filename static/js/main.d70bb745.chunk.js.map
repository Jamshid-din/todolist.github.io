{"version":3,"sources":["TodoForm.js","App.js","index.js"],"names":["TodoForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","defineProperty","target","name","value","handleSubmit","preventDefault","onSubmit","id","shortid","generate","text","state","complete","bind","assertThisInitialized","react_default","a","createElement","placeholder","onChange","onClick","React","Component","App","addTodo","todo","todos","concat","toConsumableArray","crossList","map","objectSpread","buttonStatus","s","buttonName","handleDelete","filter","removeAll","_this2","length","className","src_TodoForm","react_flip_move_es","key","console","log","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d70bb745.chunk.js","sourcesContent":["import React from \"react\"\nimport shortid from \"shortid\"\nclass TodoForm extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            text: \"\"\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    } \n// Handle the input field\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n// Handle add button\n    handleSubmit = (event) =>{\n        event.preventDefault();\n        this.props.onSubmit({\n            id:  shortid.generate(),\n            text: this.state.text,\n            complete: false\n        });\n\n        this.setState({\n            text: \"\"\n        })\n    }\n\n\n    render(){\n        return(\n            <form onSubmit={this.handleSubmit}>\n                <input \n                    value={this.state.text} \n                    placeholder=\"enter a task\"\n                    name=\"text\"\n                    onChange={this.handleChange}\n                />\n                <button onClick={this.handleSubmit}>Add</button><br/>\n            </form>\n        )\n    }\n}\nexport default TodoForm;","import React from \"react\";\nimport TodoForm from \"./TodoForm\"\nimport \"./TodoList.css\";\nimport FlipMove from \"react-flip-move\"\n\nclass App extends React.Component{\n    constructor(){\n        super()\n        this.state ={\n            todos: [],\n            buttonName: \"all\"\n        }\n        this.addTodo = this.addTodo.bind(this);\n        this.crossList = this.crossList.bind(this);\n        this.buttonStatus = this.buttonStatus.bind(this);\n        this.removeAll = this.removeAll.bind(this);\n    }\n    // Add items to the array\n    addTodo = todo => {\n            this.setState({\n            todos: [todo, ...this.state.todos]\n        })\n    }\n    // Crossline when the task is done\n    crossList = (id) => {\n        this.setState({\n            todos: this.state.todos.map(todo => {\n                if(todo.id === id){\n                    return {\n                        ...todo,\n                        complete: !todo.complete\n                    };\n                }\n                else{\n                    return todo;\n                }\n            })\n        })\n    }\n\n    // Status of the button \"Done, Undone, Trash All\"\n    buttonStatus = (s) => {\n        this.setState({\n            buttonName: s\n        })\n    }\n\n    // Delete selected \n    handleDelete  = (id) => {\n        this.setState({\n            todos: this.state.todos.filter(todo => todo.id !== id)\n        })\n    }\n\n    //Delete all tasks\n    removeAll = () => {\n        this.setState({\n            todos: []\n        })\n    }\n\n\n\n    render(){\n        let todos =[];\n        if(this.state.buttonName === \"all\"){\n            todos = this.state.todos;\n        }\n        let todosLen = todos.length;\n        \n        return(\n            <div className=\"todoListMain\">\n                <div className=\"header\">\n                    <h1>Todo App</h1>\n                    \n                    <TodoForm onSubmit={this.addTodo}/>\n                    <ul className=\"theList\">\n\n                        <FlipMove>\n                                {todos.map( (todo) => (\n                                    <li \n                                        key={todo.id}\n                                        onClick={() => this.handleDelete(todo.id)}>\n                                        {todo.text}{console.log(todo.id,todo.text)}\n                                    </li>\n                                ))}\n\n                                {this.state.todos.length ? <button onClick={this.removeAll}>Trash All</button> : null}\n                        </FlipMove>\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\nexport default App;","import React from \"react\"\nimport \"./index.css\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}